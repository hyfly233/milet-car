<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hyfly.milet.common.mapper.PassengerWalletFreezeRecordMapper">
  <resultMap id="BaseResultMap" type="com.hyfly.milet.common.entity.PassengerWalletFreezeRecord">
    <!--@mbg.generated-->
    <!--@Table t_passenger_wallet_freeze_record-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="passenger_info_id" jdbcType="INTEGER" property="passengerInfoId" />
    <result column="freeze_capital" jdbcType="DOUBLE" property="freezeCapital" />
    <result column="freeze_give_fee" jdbcType="DOUBLE" property="freezeGiveFee" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="freeze_status" jdbcType="INTEGER" property="freezeStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, passenger_info_id, freeze_capital, freeze_give_fee, order_id, freeze_status, 
    create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from t_passenger_wallet_freeze_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from t_passenger_wallet_freeze_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hyfly.milet.common.entity.PassengerWalletFreezeRecord" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_passenger_wallet_freeze_record (passenger_info_id, freeze_capital, freeze_give_fee, 
      order_id, freeze_status, create_time, 
      update_time)
    values (#{passengerInfoId,jdbcType=INTEGER}, #{freezeCapital,jdbcType=DOUBLE}, #{freezeGiveFee,jdbcType=DOUBLE}, 
      #{orderId,jdbcType=INTEGER}, #{freezeStatus,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hyfly.milet.common.entity.PassengerWalletFreezeRecord" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_passenger_wallet_freeze_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="passengerInfoId != null">
        passenger_info_id,
      </if>
      <if test="freezeCapital != null">
        freeze_capital,
      </if>
      <if test="freezeGiveFee != null">
        freeze_give_fee,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="freezeStatus != null">
        freeze_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="passengerInfoId != null">
        #{passengerInfoId,jdbcType=INTEGER},
      </if>
      <if test="freezeCapital != null">
        #{freezeCapital,jdbcType=DOUBLE},
      </if>
      <if test="freezeGiveFee != null">
        #{freezeGiveFee,jdbcType=DOUBLE},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="freezeStatus != null">
        #{freezeStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hyfly.milet.common.entity.PassengerWalletFreezeRecord">
    <!--@mbg.generated-->
    update t_passenger_wallet_freeze_record
    <set>
      <if test="passengerInfoId != null">
        passenger_info_id = #{passengerInfoId,jdbcType=INTEGER},
      </if>
      <if test="freezeCapital != null">
        freeze_capital = #{freezeCapital,jdbcType=DOUBLE},
      </if>
      <if test="freezeGiveFee != null">
        freeze_give_fee = #{freezeGiveFee,jdbcType=DOUBLE},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="freezeStatus != null">
        freeze_status = #{freezeStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hyfly.milet.common.entity.PassengerWalletFreezeRecord">
    <!--@mbg.generated-->
    update t_passenger_wallet_freeze_record
    set passenger_info_id = #{passengerInfoId,jdbcType=INTEGER},
      freeze_capital = #{freezeCapital,jdbcType=DOUBLE},
      freeze_give_fee = #{freezeGiveFee,jdbcType=DOUBLE},
      order_id = #{orderId,jdbcType=INTEGER},
      freeze_status = #{freezeStatus,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>